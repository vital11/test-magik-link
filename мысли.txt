
	How magic links work (simplified):
	An application which provides password-less authentication has roughly the following workflow.
	- User visits the login page
	- User inputs his/her email & submits the form
	- Application attempts to find user in the database
	- Application creates a token and sets and expiry date for it
	  JWTs are amazing for this since they have expiry embedded. The problem with them is that they are "heavier" and require more "network"
	- Application sends the link to the user's email address
	- User clicks on the link
	- Application checks if the token is valid — is not expired, malformed or not belonging to this user(harder to do)
	- If the token is valid, the user is provided with a session and is granted access to protected resources



	1 https://stackoverflow.com/questions/55062799/how-can-i-send-url-with-users-unique-id-and-token-in-django
	Generate token: uuid, secrets, hashlib

	The basics
	- The user enters their email address in our app
	- If the email address is known, we send them an email with a link
	- The user opens their email client, and clicks the link to finish their login
	

	The basic steps to a password-less sign in are as follows:
	- Generate a token and associate it with a user
	- Generate a url which will be a combination of the token and query parameters example email or id
	- Email the url to the user
	- Validate the token and authenticate the user when they use the url

	Сгенерировать для юзера токен/хеш/...
	Добавить этот хеш в урлы
	Отправить письмо с уролм вида (домен)+(путь в урлах)+(хеш)

	Сейчас:
	1. Админ регает пользователя (имя, мейл, пароль)
	2. При регистрации ему отправляется ссылка с подтверждением регистрации
	
	Должно быть:
	1. Админ регает пользователя
	2. Пользователь вводит в форму свой имейл
	3. Ему на почту приходит ссылка с подтверждением входа
	4. Переходит по ссылке (на главную страницу)

	Сделать:
	Форму для ввода имейла с кнопкой - отправить урл
	Перенаправление на главную
	











